{"version":3,"sources":["Components/Assets/button.js","Services/API.js","Components/Assets/typography.js","Components/Components/Inputfield.js","Services/API_User.js","Components/Pages/Hero.js","Router.js","Themes/DarkTheme.js","GlobalStyling.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonBase","styled","button","props","theme","colors","primary","Button","variant","InputVariant","color","buttonColor","onClick","handleClick","buttonText","SimpleRestAPI","base_URL","this","BASE_URL","params","callback","SendRequest","body","method","url","a","axios","request","data","JSON","stringify","headers","localStorage","getItem","then","response","console","log","status","catch","err","Label","InputField","for","id","email","password","PostData","setItem","token","Login","Hero","Router","exact","path","element","title","secondary","icons","subTitle","white","fonts","padding","container","content","margins","full","half","quarter","simple","createGlobalStyle","App","DarkTheme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb78efc5.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonBase = styled.button`\r\n    padding:16px;\r\n    background-color: ${props => props.theme.colors.primary};\r\n    height:100px;\r\n    width:200px;\r\n    &:hover {\r\n       \r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        \r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n        width:100%;\r\n    }  \r\n`\r\n\r\nexport function Button (props) {\r\n    return <ButtonBase variant={props.InputVariant} color={props.buttonColor} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n    </ButtonBase>\r\n}\r\n\r\nexport function Button_icon (props) {\r\n    return <ButtonBase variant={props.InputVariant} onClick={props.handleClick} \r\n        edge={props.edge}\r\n        color={props.buttonColor}\r\n        aria-label={props.label}>\r\n        {props.icon}\r\n    </ButtonBase>\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default class SimpleRestAPI { \r\n    constructor(base_URL){\r\n        this.BASE_URL = 'https://38d60yu5yl.execute-api.us-east-2.amazonaws.com/test/v1';\r\n    }\r\n\r\n    GetData(params, callback){\r\n        this.SendRequest(\r\n            \"get\",\r\n            params === \"\"? this.BASE_URL : this.BASE_URL + params,\r\n            callback\r\n        );\r\n    }\r\n\r\n    PostData(params, body, callback){\r\n        this.SendRequest(\r\n            \"POST\",\r\n            params === \"\"? this.BASE_URL : this.BASE_URL + params,\r\n            callback,\r\n            body,\r\n        );\r\n    }\r\n\r\n    PutData(params, body, callback){\r\n        this.SendRequest(\r\n            \"put\",\r\n            params === \"\"? this.BASE_URL : this.BASE_URL + params,\r\n            callback,\r\n            body,\r\n        );\r\n    }\r\n\r\n    DeleteData(params, callback){\r\n        this.SendRequest(\r\n            \"delete\",\r\n            params === \"\"? this.BASE_URL : this.BASE_URL + params,\r\n            callback,\r\n        );\r\n    }\r\n\r\n    async SendRequest(method, url, callback, body){       \r\n        axios.request({\r\n            method: method,\r\n            data: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            url: url\r\n        }) \r\n        .then(response => {\r\n            console.log(response);\r\n            callback({\r\n                status: response.status,\r\n                data: response.data,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            callback({\r\n                status: err.status,\r\n                data: err,\r\n            });\r\n        });\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function main_Title (props) {\r\n    return <h1 size={props.InputVariant} color={props.buttonColor} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n    </h1>\r\n}\r\n\r\nexport function Title (props) {\r\n    return <h2 size={props.InputVariant} color={props.buttonColor} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n    </h2>\r\n}\r\n\r\nexport function Sub_Title (props) {\r\n    return <h4 size={props.InputVariant} color={props.buttonColor} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n    </h4>\r\n}\r\n\r\nexport function Support(props) {\r\n    return <p size={props.InputVariant} color={props.buttonColor} onClick={props.handleClick}>\r\n    {props.buttonText}\r\n    </p>\r\n}\r\n\r\nexport function Countinuos(props) {\r\n    return <p size={props.InputVariant} color={props.buttonColor} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n    </p>\r\n}\r\n\r\nexport function Featured(props) {\r\n    return <input variant={props.InputVariant} color={props.buttonColor} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n    </input>\r\n}\r\n\r\nexport function Label(props) {\r\n    return <label variant={props.InputVariant} color={props.buttonColor} onClick={props.handleClick}>\r\n        {props.buttonText}\r\n    </label>\r\n}","import React from 'react';\r\nimport { Button } from '../Assets/button';\r\nimport { Login, Register} from '../../Services/API_User';\r\nimport { Label } from '../Assets/typography';\r\n\r\n\r\nexport function InputField (props) {\r\n    return <div>\r\n        <Label for=\"user\" buttonText=\"LOGIN\"></Label>\r\n        <Button id=\"user\" handleClick={() => Login('userEmail', '123456', () => console.log('login'))}></Button>\r\n    </div>\r\n}","import SimpleRestAPI from './API';\r\n\r\nexport const Login = (email, password, callback) => {\r\n    const api = new SimpleRestAPI(); \r\n\r\n    const body = {\r\n        \"email\": email,\r\n        \"password\": password\r\n    }\r\n    \r\n    api.PostData('/login', body, (response) => {\r\n        console.log(response.status);\r\n        if(response.status < 300){\r\n            callback();\r\n            localStorage.setItem(\"token\", response.data.token);\r\n        }\r\n    })\r\n}\r\n\r\nexport const Register = (name, email, password, wallet, callback) => {\r\n    const api = new SimpleRestAPI(); \r\n\r\n    const body = {\r\n        \"name\": name,\r\n        \"email\": email,\r\n        \"password\": password,\r\n        \"wallet\": wallet\r\n    }\r\n\r\n    api.PostData('/user', JSON.stringify(body), (response) => {\r\n        if(response.status < 300){\r\n            callback();\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport { InputField } from '../Components/Inputfield';\r\n\r\nexport function Hero (props) {\r\n    return <div>\r\n        <InputField></InputField>\r\n    </div>\r\n}","import React from 'react';\r\nimport {Routes, Route, BrowserRouter} from 'react-router-dom';\r\nimport {Hero} from './Components/Pages/Hero';\r\n\r\nconst Router = () => {\r\n    return (\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route exact path=\"/Down-Below\" element={<Hero/>} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    )\r\n}\r\n  \r\nexport default Router;","export default {\r\n    title: 'dark',\r\n\r\n    colors: {\r\n        primary: 'blue',\r\n        secondary: 'red',\r\n\r\n        icons: '#FFFFFF',\r\n\r\n        title: '#FFFFFF',\r\n        subTitle: '#AAAAA5',\r\n        white: '#FFFFFF'\r\n    },\r\n\r\n    fonts: {\r\n        title:'sans-serif',\r\n        body:'serif'\r\n    },\r\n\r\n    padding: {\r\n        container:'20%',\r\n        content:'32px 16px'\r\n    },\r\n\r\n    margins: {\r\n        full: '64px',\r\n        half: '32px',\r\n        quarter: '16px',\r\n        simple: '8px'\r\n    }\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n*{\r\n  margin:0;\r\n  padding:0;\r\n  box-sizing:border-box;\r\n  font-family: 'Red Hat Display', sans-serif;\r\n}\r\nbody{\r\n  -webkit-font-smoothing:antialiased;\r\n}\r\n`;","import React from \"react\";\nimport Router from \"./Router\";\n\nimport { ThemeProvider } from 'styled-components';\nimport DarkTheme from './Themes/DarkTheme';\n\nimport CreateGlobalStyle from './GlobalStyling';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={DarkTheme}>\n      <CreateGlobalStyle />\n      <Router />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}